include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
file(GLOB_RECURSE CORE "${CMAKE_CURRENT_SOURCE_DIR}/src/core/*.cpp")
file(GLOB_RECURSE MPICORE "${CMAKE_CURRENT_SOURCE_DIR}/src/core/*.cpp")
list(FILTER MPICORE EXCLUDE REGEX "singlenode")
file(GLOB_RECURSE SEQ "${CMAKE_CURRENT_SOURCE_DIR}/src/sequential/*.cpp")
file(GLOB_RECURSE EXTERN "${CMAKE_CURRENT_SOURCE_DIR}/src/externlib/*.cpp")
list(FILTER EXTERN EXCLUDE REGEX "hdf5")
file(GLOB_RECURSE MPI "${CMAKE_CURRENT_SOURCE_DIR}/src/mpi/*.cpp")
list(FILTER MPI EXCLUDE REGEX "opencl")
list(FILTER MPI EXCLUDE REGEX "cuda")
list(FILTER MPI EXCLUDE REGEX "hdf5")
add_library(ops_seq ${CORE} ${EXTERN} ${SEQ} )
target_link_libraries(ops_seq PRIVATE)
install(TARGETS ops_seq DESTINATION lib)
if (HDF5_FOUND)
    add_library(ops_hdf5_seq ${CMAKE_CURRENT_SOURCE_DIR}/src/externlib/ops_hdf5.cpp)
    target_link_libraries(ops_hdf5_seq PRIVATE ${HDF5_LIBRARIES})
    install(TARGETS ops_hdf5_seq DESTINATION lib)
endif ()
if (MPI_FOUND)
    add_library(ops_mpi ${MPI} ${MPICORE} ${EXTERN})
    target_link_libraries(ops_mpi PRIVATE MPI::MPI_CXX ${HDF5_LIBRARIES})
    install(TARGETS ops_mpi DESTINATION lib)
    if (HDF5_FOUND)
       add_library(ops_hdf5_mpi ${CMAKE_CURRENT_SOURCE_DIR}/src/mpi/ops_mpi_hdf5.cpp)
       target_link_libraries(ops_hdf5_mpi PRIVATE MPI::MPI_CXX ${HDF5_LIBRARIES})
       install(TARGETS ops_hdf5_mpi DESTINATION lib)
    endif ()
endif ()