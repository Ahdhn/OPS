@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/ops_seq_targets.cmake")
check_required_components(ops_seq)
if (HDF5_FOUND)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_hdf5_seq_targets.cmake")
    check_required_components(ops_hdf5_seq)
endif ()
if (CUDAToolkit_FOUND)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_cuda_targets.cmake")
    check_required_components(ops_cuda)
endif ()
if (OpenCL_FOUND)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_opencl_targets.cmake")
    check_required_components(ops_opencl)
endif ()
if (MPI_FOUND)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_mpi_targets.cmake")
    check_required_components(ops_mpi)
    if (HDF5_FOUND)
        include("${CMAKE_CURRENT_LIST_DIR}/ops_hdf5_mpi_targets.cmake")
        check_required_components(ops_hdf5_mpi)
    endif ()
    if (CUDAToolkit_FOUND)
        include("${CMAKE_CURRENT_LIST_DIR}/ops_mpi_cuda_targets.cmake")
        check_required_components(ops_mpi_cuda)
    endif ()
    if (OpenCL_FOUND)
        include("${CMAKE_CURRENT_LIST_DIR}/ops_mpi_opencl_targets.cmake")
        check_required_components(ops_mpi_opencl)
    endif ()
endif ()

if (LIBTRID_PATH)
#if (NOT (LIBTRID STREQUAL "NONE"))
    include("${CMAKE_CURRENT_LIST_DIR}/ops_trid_seq_targets.cmake")
    check_required_components(ops_trid_seq)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_trid_cuda_targets.cmake")
    check_required_components(ops_trid_cuda)

    include("${CMAKE_CURRENT_LIST_DIR}/ops_trid_mpi_targets.cmake")
    check_required_components(ops_trid_mpi)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_trid_mpi_cuda_targets.cmake")
    check_required_components(ops_trid_mpi_cuda)
endif ()



