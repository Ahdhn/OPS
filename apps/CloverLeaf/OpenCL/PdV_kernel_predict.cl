//
// auto-generated by ops.py on 2014-05-13 15:30
//


#ifndef MIN
#define MIN(a,b) ((a<b) ? (a) : (b))
#endif
#ifndef MAX
#define MAX(a,b) ((a>b) ? (a) : (b))
#endif
#ifndef SIGN
#define SIGN(a,b) ((b<0.0) ? (a*(-1)) : (a))
#endif

#pragma OPENCL EXTENSION cl_khr_fp64:enable

#define OPS_ACC0(x,y) (x+xdim0_PdV_kernel_predict*(y))
#define OPS_ACC1(x,y) (x+xdim1_PdV_kernel_predict*(y))
#define OPS_ACC2(x,y) (x+xdim2_PdV_kernel_predict*(y))
#define OPS_ACC3(x,y) (x+xdim3_PdV_kernel_predict*(y))
#define OPS_ACC4(x,y) (x+xdim4_PdV_kernel_predict*(y))
#define OPS_ACC5(x,y) (x+xdim5_PdV_kernel_predict*(y))
#define OPS_ACC6(x,y) (x+xdim6_PdV_kernel_predict*(y))
#define OPS_ACC7(x,y) (x+xdim7_PdV_kernel_predict*(y))
#define OPS_ACC8(x,y) (x+xdim8_PdV_kernel_predict*(y))
#define OPS_ACC9(x,y) (x+xdim9_PdV_kernel_predict*(y))
#define OPS_ACC10(x,y) (x+xdim10_PdV_kernel_predict*(y))
#define OPS_ACC11(x,y) (x+xdim11_PdV_kernel_predict*(y))


//user function

void PdV_kernel_predict( __global double *xarea,  __global double *xvel0,
                 __global double *yarea,  __global double *yvel0,
                __global double *volume_change,  __global double *volume,
                 __global double *pressure,
                 __global double *density0, __global double *density1,
                 __global double *viscosity,
                 __global double *energy0, __global double *energy1,
  double dt,
  int xdim0_PdV_kernel_predict,
  int xdim1_PdV_kernel_predict,
  int xdim2_PdV_kernel_predict,
  int xdim3_PdV_kernel_predict,
  int xdim4_PdV_kernel_predict,
  int xdim5_PdV_kernel_predict,
  int xdim6_PdV_kernel_predict,
  int xdim7_PdV_kernel_predict,
  int xdim8_PdV_kernel_predict,
  int xdim9_PdV_kernel_predict,
  int xdim10_PdV_kernel_predict,
  int xdim11_PdV_kernel_predict)
  {


  double recip_volume, energy_change, min_cell_volume;
  double right_flux, left_flux, top_flux, bottom_flux, total_flux;

  left_flux = ( xarea[OPS_ACC0(0,0)] * ( xvel0[OPS_ACC1(0,0)] + xvel0[OPS_ACC1(0,1)] +
                                xvel0[OPS_ACC1(0,0)] + xvel0[OPS_ACC1(0,1)] ) ) * 0.25 * dt * 0.5;
  right_flux = ( xarea[OPS_ACC0(1,0)] * ( xvel0[OPS_ACC1(1,0)] + xvel0[OPS_ACC1(1,1)] +
                                 xvel0[OPS_ACC1(1,0)] + xvel0[OPS_ACC1(1,1)] ) ) * 0.25 * dt * 0.5;

  bottom_flux = ( yarea[OPS_ACC2(0,0)] * ( yvel0[OPS_ACC3(0,0)] + yvel0[OPS_ACC3(1,0)] +
                                  yvel0[OPS_ACC3(0,0)] + yvel0[OPS_ACC3(1,0)] ) ) * 0.25* dt * 0.5;
  top_flux = ( yarea[OPS_ACC2(0,1)] * ( yvel0[OPS_ACC3(0,1)] + yvel0[OPS_ACC3(1,1)] +
                               yvel0[OPS_ACC3(0,1)] + yvel0[OPS_ACC3(1,1)] ) ) * 0.25 * dt * 0.5;

  total_flux = right_flux - left_flux + top_flux - bottom_flux;

  volume_change[OPS_ACC4(0,0)] = (volume[OPS_ACC5(0,0)])/(volume[OPS_ACC5(0,0)] + total_flux);

  min_cell_volume = MIN( volume[OPS_ACC5(0,0)] + right_flux - left_flux + top_flux - bottom_flux ,
                           MIN(volume[OPS_ACC5(0,0)] + right_flux - left_flux,
                           volume[OPS_ACC5(0,0)] + top_flux - bottom_flux) );

  recip_volume = 1.0/volume[OPS_ACC5(0,0)];

  energy_change = ( pressure[OPS_ACC6(0,0)]/density0[OPS_ACC7(0,0)] +
                    viscosity[OPS_ACC9(0,0)]/density0[OPS_ACC7(0,0)] ) * total_flux * recip_volume;
  energy1[OPS_ACC11(0,0)] = energy0[OPS_ACC10(0,0)] - energy_change;
  density1[OPS_ACC8(0,0)] = density0[OPS_ACC7(0,0)] * volume_change[OPS_ACC4(0,0)];

}



 #undef OPS_ACC0
 #undef OPS_ACC1
 #undef OPS_ACC2
 #undef OPS_ACC3
 #undef OPS_ACC4
 #undef OPS_ACC5
 #undef OPS_ACC6
 #undef OPS_ACC7
 #undef OPS_ACC8
 #undef OPS_ACC9
 #undef OPS_ACC10
 #undef OPS_ACC11


 __kernel void ops_PdV_kernel_predict(
 __global double* arg0,
 __global double* arg1,
 __global double* arg2,
 __global double* arg3,
 __global double* arg4,
 __global double* arg5,
 __global double* arg6,
 __global double* arg7,
 __global double* arg8,
 __global double* arg9,
 __global double* arg10,
 __global double* arg11,
 double dt,
 int xdim0_PdV_kernel_predict,
 int xdim1_PdV_kernel_predict,
 int xdim2_PdV_kernel_predict,
 int xdim3_PdV_kernel_predict,
 int xdim4_PdV_kernel_predict,
 int xdim5_PdV_kernel_predict,
 int xdim6_PdV_kernel_predict,
 int xdim7_PdV_kernel_predict,
 int xdim8_PdV_kernel_predict,
 int xdim9_PdV_kernel_predict,
 int xdim10_PdV_kernel_predict,
 int xdim11_PdV_kernel_predict,
 const int base0,
 const int base1,
 const int base2,
 const int base3,
 const int base4,
 const int base5,
 const int base6,
 const int base7,
 const int base8,
 const int base9,
 const int base10,
 const int base11,
 int size0,
 int size1 ){


   int idx_y = get_global_id(1);
   int idx_x = get_global_id(0);

   if (idx_x < size0 && idx_y < size1) {
     PdV_kernel_predict(&arg0[base0 + idx_x * 1 + idx_y * 1 * xdim0_PdV_kernel_predict],
                &arg1[base1 + idx_x * 1 + idx_y * 1 * xdim1_PdV_kernel_predict],
                &arg2[base2 + idx_x * 1 + idx_y * 1 * xdim2_PdV_kernel_predict],
                &arg3[base3 + idx_x * 1 + idx_y * 1 * xdim3_PdV_kernel_predict],
                &arg4[base4 + idx_x * 1 + idx_y * 1 * xdim4_PdV_kernel_predict],
                &arg5[base5 + idx_x * 1 + idx_y * 1 * xdim5_PdV_kernel_predict],
                &arg6[base6 + idx_x * 1 + idx_y * 1 * xdim6_PdV_kernel_predict],
                &arg7[base7 + idx_x * 1 + idx_y * 1 * xdim7_PdV_kernel_predict],
                &arg8[base8 + idx_x * 1 + idx_y * 1 * xdim8_PdV_kernel_predict],
                &arg9[base9 + idx_x * 1 + idx_y * 1 * xdim9_PdV_kernel_predict],
                &arg10[base10 + idx_x * 1 + idx_y * 1 * xdim10_PdV_kernel_predict],
                &arg11[base11 + idx_x * 1 + idx_y * 1 * xdim11_PdV_kernel_predict],
                dt,
                xdim0_PdV_kernel_predict,
                xdim1_PdV_kernel_predict,
                xdim2_PdV_kernel_predict,
                xdim3_PdV_kernel_predict,
                xdim4_PdV_kernel_predict,
                xdim5_PdV_kernel_predict,
                xdim6_PdV_kernel_predict,
                xdim7_PdV_kernel_predict,
                xdim8_PdV_kernel_predict,
                xdim9_PdV_kernel_predict,
                xdim10_PdV_kernel_predict,
                xdim11_PdV_kernel_predict);
   }

 }
